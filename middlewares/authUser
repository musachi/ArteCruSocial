var _ = require('lodash');
var writeResponse = require('../helpers/write-response');
var status = require('../models/Service/status');
var User = require('../models/neo4j_model/user');
var jwt = require('jsonwebtoken');
//TODO change secret for a file
var secret = require('../helpers/contants').constants.SECRET;
var Response = require('../models/Service/response');
var ErrorResponse = require('../models/Service/error-response');
var writeResponse = require('../helpers/write-response');
var messages = require('../helpers/messages').messages;

var authUser = module.exports = function (req, res, next) {
    let errorResponse = new ErrorResponse(status.Unauthorized, status.InvalidCredentials, messages.InvalidToken);
    if (req.url === '/' || (req.url === '/users' && req.method === 'POST') || req.url === '/authenticate' || req.method === 'OPTIONS') {
        next();
    }
    else {
        var authorization = req.headers['authorization'];
        if (req.headers['access-control-request-method'] || req.headers['access-control-request-headers'])
            writeResponse.write(res, new Response(status.OptionsResponse, ""));
        else if (!authorization || authorization.split(' ').length < 2) {
            writeResponse.write(res, errorResponse);
        }
        else {
            const authHeader = authorization.split(' ');
            if (!authHeader || !authHeader[1]) {
                req.userId = null;
                console.log("auth header: " + authHeader);
                writeResponse.write(res, errorResponse);
                //return res;
            }
            var token = authHeader[1];
            jwt.verify(token, secret, function (err, user) {
                if (err) {
                    writeResponse.write(res, errorResponse);
                    console.log("token error: " + JSON.stringify(err));
                    //return res;
                }
                else {
                    req.user = user;
                    next();
                }
            });
        }
    }
};